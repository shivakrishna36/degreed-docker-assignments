Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. type "docker -v" to check if it's installed.
   try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker images --help ---> This command shows all the avaialble options and commands to work with docker images
	docker ps --help ---> This command shows all the avaialble options and commands to work with docker containers

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
--> docker pull nginx

3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
--> docker images

4. Find out the "Full" ImageId of the image that you pulled and write it below.
--> docker images nginx ===>ed21b7a8aee9

5. Create a container of your image 
--> docker run --name engie nginx

6. List all the running containers
--> docker ps

7. List all the running and stopped containers
--> docker ps -a

8. Find out the "Full" containerId of the container and write it below.
--> docker ps 
b7ab29a3d874

9. Find out how many image layers are used to build this image.
--> docker history nginx

10. Get the Apache Tomcat 7 server image from the docker hub.
--> docker pull tomcat:7

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
--> docker run --name=tom -p 8888:8080 tomcat:7

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
-->  docker inspect --format '{{ .NetworkSettings.IPAddress }}' <CONTAINER ID>
172.17.0.2

13. Which Port it is using?
-->docker port tom 
8080/tcp -> 0.0.0.0:8888

14. Try to access the Tomcat's home page from your machine/vm.
--> 192.168.99.100:8888

15. What is the disk size of Apache Tomcat image?
-->  docker images tomcat:7


16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
--> docker inspect tom 
	JAVA_HOME=/usr/local/openjdk-8
	CATALINA_HOME=/usr/local/tomcat

17. Find out which port is exposed for tomcat?
--> docker port tom 
8080/tcp -> 0.0.0.0:8888


18. Run multiple conntainers of tomcat on different port and access it's home page.
-->  docker run --name=tom -p 8888:8080 tomcat:7
       docker run --name=tom -p 8889:8080 tomcat:7

19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
--> docker pull ubuntu:rolling
      docker pull ubuntu:focus

20. Run the container of ubuntu in attached mode.
--> docker run ubuntu:rolling

21. Run the container of another ubuntu in detached mode.
--> docker run -d ubuntu:focal

22. Check how many ubuntu containers are running and stopped
--> docker ps -a 
Zero

23. Is the tomcat container running? If no, start one.
--> No, docker start tom

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
--> docker logs tom(container name)

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
--> no docker run ubuntu:rolling sleep 100

26. Login as root user in ubuntu container
--> docker exec -it angry_bohr bash

27. Create a file with any name in root directory
--> touch new.txt


28. Install software of your choice in ubuntu container using "apt-get install"
--> apt-get install nodejs

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
-->exit

30. Check if the ubuntu container is running.
--> docker ps -a

31. Create a new ubuntu container out of the same image as that previous container in attached mode.
--> docker run --name=ab ubuntu:rolling sleep 1000

32. Login as a root user
--> docker exec -it ab bash

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
-->ls
No

34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
-->yes

35. Create an Image out of the existing container.
-->docker commit abc ubuntu_new

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
-->docker run --name=new-abc ubuntu_new
yes it exists

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
-->no

38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
--> docker exec -it tom bash
cd webapps
mkdir ROOT
cd ROOT
touch index.html
vi index.html
<h1>Hello world</h1>
exit

39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q

write atleast 1 command using each option above and prove their concepts as described in the --help.
---> docker images --help
docker images -a  ======> shows all images
docker images --filter "dangling=true" ======> shows images with no tags
docker images -q ======> shows only ids
